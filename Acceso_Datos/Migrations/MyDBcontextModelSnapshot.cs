// <auto-generated />
using System;
using Acceso_Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Acceso_Datos.Migrations
{
    [DbContext(typeof(MyDBcontext))]
    partial class MyDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entidades.Ciudad", b =>
                {
                    b.Property<int>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCiudad"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCiudad");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("Entidades.Estudiante", b =>
                {
                    b.Property<int>("IdEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstudiante"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Fotografia")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdMateriaEnEstudiante")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstudiante");

                    b.HasIndex("IdMateriaEnEstudiante");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Entidades.Materia", b =>
                {
                    b.Property<int>("IdMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateria"), 1L, 1);

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("IdProfesorEnMateria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMateria");

                    b.HasIndex("IdProfesorEnMateria");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("Entidades.Profesor", b =>
                {
                    b.Property<int>("IdProfesor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProfesor"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Aula")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Fotografia")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("IdCiudadEnPersona")
                        .HasColumnType("int");

                    b.Property<int>("IdRolEnPersona")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdProfesor");

                    b.HasIndex("IdCiudadEnPersona");

                    b.HasIndex("IdRolEnPersona");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Entidades.Estudiante", b =>
                {
                    b.HasOne("Entidades.Materia", "Objeto_Materia")
                        .WithMany("Lista_Estudiante")
                        .HasForeignKey("IdMateriaEnEstudiante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objeto_Materia");
                });

            modelBuilder.Entity("Entidades.Materia", b =>
                {
                    b.HasOne("Entidades.Profesor", "Objeto_Profesor")
                        .WithMany("Lista_Materias")
                        .HasForeignKey("IdProfesorEnMateria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objeto_Profesor");
                });

            modelBuilder.Entity("Entidades.Profesor", b =>
                {
                    b.HasOne("Entidades.Ciudad", "Objeto_Ciudad")
                        .WithMany("Lista_Profesores")
                        .HasForeignKey("IdCiudadEnPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Rol", "Objeto_Rol")
                        .WithMany("Lista_Profesores")
                        .HasForeignKey("IdRolEnPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objeto_Ciudad");

                    b.Navigation("Objeto_Rol");
                });

            modelBuilder.Entity("Entidades.Ciudad", b =>
                {
                    b.Navigation("Lista_Profesores");
                });

            modelBuilder.Entity("Entidades.Materia", b =>
                {
                    b.Navigation("Lista_Estudiante");
                });

            modelBuilder.Entity("Entidades.Profesor", b =>
                {
                    b.Navigation("Lista_Materias");
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.Navigation("Lista_Profesores");
                });
#pragma warning restore 612, 618
        }
    }
}
